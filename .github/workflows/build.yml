name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that feedback is delivered for all matrix combinations.
      fail-fast: false
      
      matrix:
          os: [ ubuntu-latest, windows-latest ]
          runtime: [ linux-x64, linux-arm64, win-x64 ]
          configuration: [ Release ]
          exclude:
            - os: windows-latest
              runtime: linux-x64
            - os: windows-latest
              runtime: linux-arm64
            - os: ubuntu-latest
              runtime: win-x64

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Install .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x

    - name: Install Cross-compilation Tooling
      if: ${{ matrix.runtime == 'linux-arm64' }}
      # Packages from https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/cross-compile#linux
      run: sudo apt update && sudo apt install clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu

    - name: Publish
      run: >
        dotnet publish
        --runtime ${{ matrix.runtime }}
        --self-contained
        --configuration ${{ matrix.configuration }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v5
      with:
        name: GlyfiBot_${{ matrix.runtime }}
        path: "GlyfiBot/bin/Release/net9.0/${{ matrix.runtime }}/publish/"
